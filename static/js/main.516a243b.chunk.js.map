{"version":3,"sources":["reducers/appReducer.js","reducers/filterReducer.js","reducers/sortReducer.js","reducers/dataReducer.js","reducers/rootReducer.js","constants/actionTypes.js","config/default.js","store/configureStore.js","utils/querySting.js","utils/localStorage.js","utils/dataUtils.js","config/theme.js","serviceWorker.js","constants/constants.js","components/FilterGlobal/FilterGlobal.js","components/FilterEnum/FilterEnum.js","components/ToggleFilter/ToggleFilter.js","components/Filters/Filters.js","containers/FiltersContainer.js","actions/filterActions.js","selectors/filterDataSelector.js","selectors/processDataSelector.js","selectors/csvDataSelector.js","components/CSVExport/CSVExport.js","containers/CSVExportContainer.js","components/SettingVirtualization/SettingVirtualization.js","components/SettingDeleteRows/SettingDeleteRows.js","components/SettingVisibility/SettingVisibility.js","components/SettingQueryString/SettingQueryString.js","components/Settings/Settings.js","actions/settingsAction.js","containers/SettingsContainer.js","actions/dataActions.js","actions/sortActions.js","components/SortItems/SortItems.js","components/FilterItems/FilterItems.js","components/HeaderDataCell/HeaderDataCell.js","components/HeaderDataGrid/HeaderDataGrid.js","containers/HeaderDataGridContainer.js","components/DataCellAvatar/DataCellAvatar.js","components/DataCellText/DataCellText.js","components/DataCellBool/DataCellBool.js","components/DataCellObject/DataCellObject.js","components/DataCellSelect/DataCellSelect.js","components/ContentDataRow/ContentDataRow.js","components/VirtualizedList/VirtualizedList.js","components/ContentDataGrid/ContentDataGridStyles.js","components/ContentDataGrid/ContentDataGrid.js","containers/ContentDataGridContainer.js","components/ReactDataGrid/ReactDataGrid.js","config/themeDark.js","App.js","index.js"],"names":["initialState","virtualizationState","hiddenColumns","name","score","registerDate","lastVisit","filterKey","filterValue","filterGlobalValue","filterToggleState","filterEnums","isFiltering","searchPopupName","sortKeys","directions","isSortPending","data","selectedItems","isPending","error","getData","state","getDataPending","getDataError","rootReducer","combineReducers","appState","action","type","payload","fieldName","hiddenState","dataState","filterState","sortState","DEFAULT_CONFIG","ENUM_CONFIG","DATA_TYPES","MAP","0","title","columnWidth","isHidden","dataType","leftPosition","sticky","1","2","isSortable","isSearchable","3","4","5","6","7","8","9","10","largeText","middleware","thunk","logger","stateWithParams","paramsString","window","location","search","parsedParams","startsWith","substr","split","forEach","param","key","value","initialStateSort","initialStateFilter","queryStringParse","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","composeWithDevTools","applyMiddleware","subscribe","throttle","stringify","setItem","saveState","getState","DATA_LENGTH","MAX_SCORE","MAX_AMOUNT","generateFakeRecord","id","Faker","random","uuid","avatar","image","internet","userName","number","date","recent","toLocaleDateString","weekday","Math","floor","length","instant","Date","getTime","money","currencySymbol","finance","amount","active","description","lorem","paragraph","filterGlobal","filter","item","record","Object","keys","toString","toLowerCase","includes","theme","createMuiTheme","palette","secondary","red","text","light","grey","color","grayed","Boolean","hostname","match","DIRECTION_VALUES","FilterGlobal","setFilterGlobalAction","useState","inputValue","setInputValue","useEffect","delayedSearchAction","useCallback","debounce","Grid","container","FormControl","fullWidth","variant","InputLabel","htmlFor","OutlinedInput","onChange","currentTarget","endAdornment","InputAdornment","position","IconButton","aria-label","edge","labelWidth","defaultProps","useStyles","makeStyles","root","primary","contrastText","animatedComponent","makeAnimated","options","map","label","FilterEnum","setEnumFilterAction","classes","defaultValue","xs","Typography","gutterBottom","className","closeMenuOnSelect","components","isMulti","newValue","enumsSelected","switchBase","common","white","backgroundColor","opacity","border","track","checked","thumb","focusVisible","ToggleFilter","setToggleAction","toggleChangeHandler","sm","FormControlLabel","control","Switch","filterContainer","FiltersContainer","connect","dispatch","toggleValue","checkedStatus","setToggle","setTimeout","setEnumFilter","setFilterGlobal","spacing","style","textTransform","filterDataSelector","createSelector","dataCollection","filterToggle","filteredData","filterByFieldName","filterByEnums","filterByToggle","filterData","processDataSelector","sort","sortFields","sortDirections","orderBy","csvDataSelector","processedData","filteredItem","index","values","join","CSVExport","csvData","filename","target","textDecoration","Button","startIcon","CSVExportContainer","SettingVirtualization","setVirtualizationAction","undefined","SettingDeleteRows","selectionState","deleteRowsAction","disabled","onClick","SettingVisibility","setVisibilityAction","anchorEl","setAnchorElement","open","aria-controls","aria-haspopup","event","Menu","keepMounted","onClose","MenuItem","Checkbox","evt","handleChange","SettingQueryString","Link","href","top","left","zIndex","settingsContainer","height","paddingLeft","Settings","justify","clsx","alignItems","md","SettingsContainer","setVirtualization","setVisibility","setSortParams","sortKey","shiftFlag","shiftKey","sortKeysArg","directionsArg","fieldIndex","indexOf","push","splice","setSortValues","sortBlock","flexWrap","iconSort","marginLeft","cursor","selected","props","main","sortOrderText","fontSize","SortItems","sortOrder","setSortParamsAction","DESCENDING_DIRECTION","sortBy","size","Box","component","searchContainer","searchPopup","bottom","right","width","padding","borderRadius","boxShadow","activeSearch","inputRoot","buttonsBlock","FilterItems","setFilterDataAction","setSearchPopupAction","visibleState","setVisibleState","isActive","searchValueState","setSearchValueState","TextField","placeholder","headerDataCell","titleContainer","cellTitle","userSelect","whiteSpace","bordered","borderRight","HeaderDataCell","isSticky","headerTable","flexShrink","HeaderDataGridContainer","setSearchPopup","setFilterData","avatarBlock","smallImage","DataCellAvatar","imageUrl","Avatar","alt","src","textBlock","numberCell","justifyContent","cellText","overflow","textOverflow","DataCellText","dataContent","isNumber","flagBlock","flagState","DataCellBool","objectBlock","spanItem","margin","DataCellObject","selectBlock","indexText","DataCellSelect","selectState","setSelectionAction","inputProps","rowItem","borderTop","selectedItem","renderText","ContentDataRow","React","memo","isSelected","renders","useRef","current","renderCell","prevProps","nextProps","VirtualizedList","dataLength","rowHeight","headerHeight","stickyHeader","renderItem","boundaryItems","containerHeight","scrollPosition","setScrollPosition","innerHeight","itemsToRender","setItemsToRender","viewportRef","scrollHandler","scrollTop","windowResizeHandler","clientHeight","newItemsToRender","addEventListener","removeEventListener","startIndexToRender","endIndexToRender","ref","onScroll","Array","fill","defaultTheme","contentDataGrid","display","gridTemplateRows","alignContent","boxSizing","tableWrapper","styledScrollBar","scrollbarWidth","scrollbarColor","backDropRoot","ContentDataGrid","message","Backdrop","CircularProgress","ContentDataGridContainer","fetchedData","itemIndex","setSelection","reactDataGrid","ReactDataGrid","direction","themeDark","extra","appRoot","shadows","appWrapper","filtersContainer","tableContainer","height100Percent","from","generateFakeData","ReactDOM","render","ThemeProvider","Paper","elevation","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.516a243b.chunk.js","sourcesContent":["import * as actionTypes from 'constants/actionTypes';\r\n\r\nconst initialState = {\r\n  virtualizationState: true,\r\n  hiddenColumns: {\r\n    name: false,\r\n    score: false,\r\n    registerDate: false,\r\n    lastVisit: false,\r\n  },\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_VIRTUALIZATION:\r\n      return { ...state, virtualizationState: action.payload };\r\n\r\n    case actionTypes.SET_HIDDEN_COLUMNS:\r\n      return {\r\n        ...state,\r\n        hiddenColumns: {\r\n          ...state.hiddenColumns,\r\n          [action.payload.fieldName]: action.payload.hiddenState,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as actionTypes from 'constants/actionTypes';\r\n\r\nexport const initialState = {\r\n  filterKey: '',\r\n  filterValue: '',\r\n  filterGlobalValue: '',\r\n  filterToggleState: 0,\r\n  filterEnums: [],\r\n  isFiltering: false,\r\n  searchPopupName: '', // TODO: Do we need this ????\r\n};\r\n\r\nexport const filterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SEARCH_DATA_REQUEST:\r\n      return {\r\n        ...state,\r\n        filterValue: action.payload,\r\n        isFiltering: true,\r\n      };\r\n\r\n    case actionTypes.SEARCH_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        filterKey: action.payload.filterKey,\r\n        filterValue: action.payload.filterValue,\r\n        isFiltering: false,\r\n      };\r\n\r\n    case actionTypes.SEARCH_POPUP:\r\n      return { ...state, searchPopupName: action.payload };\r\n\r\n    case actionTypes.TOGGLE_STATE:\r\n      return { ...state, filterToggleState: action.payload };\r\n\r\n    case actionTypes.SET_ENUM_FILTER_PENDING:\r\n      return { ...state, isFiltering: true };\r\n\r\n    case actionTypes.SET_ENUM_FILTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        filterEnums: action.payload,\r\n        isFiltering: false,\r\n      };\r\n\r\n    case actionTypes.GLOBAL_SEARCH_PENDING:\r\n      return { ...state, isFiltering: true };\r\n\r\n    case actionTypes.GLOBAL_SEARCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        filterGlobalValue: action.payload,\r\n        isFiltering: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as actionTypes from 'constants/actionTypes';\r\n\r\nexport const initialState = {\r\n  sortKeys: [],\r\n  directions: [],\r\n  isSortPending: false,\r\n};\r\n\r\nexport const sortReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_SORT_PENDING:\r\n      return { ...state, isSortPending: true };\r\n\r\n    case actionTypes.SET_SORT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isSortPending: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as actionTypes from 'constants/actionTypes';\r\n\r\nconst initialState = {\r\n  data: [],\r\n  selectedItems: [],\r\n  isPending: false,\r\n  error: null,\r\n};\r\n\r\nexport const dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_DATA_PENDING:\r\n      return { ...state, isPending: true, error: null };\r\n\r\n    case actionTypes.FETCH_DATA_SUCCESS:\r\n      return { ...state, data: action.payload, isPending: false, error: null };\r\n\r\n    case actionTypes.FETCH_DATA_ERROR:\r\n      return { ...state, isPending: false, error: action.payload };\r\n\r\n    case actionTypes.SET_SELECT_ROW:\r\n      return { ...state, selectedItems: action.payload };\r\n\r\n    case actionTypes.DELETE_ROWS:\r\n      return {\r\n        ...state,\r\n        selectedItems: action.payload.selectedItems,\r\n        data: action.payload.data,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getData = state => state.data;\r\nexport const getDataPending = state => state.isPending;\r\nexport const getDataError = state => state.error;\r\n","import { combineReducers } from 'redux';\r\nimport { appReducer } from 'reducers/appReducer';\r\nimport { filterReducer } from 'reducers/filterReducer';\r\nimport { sortReducer } from 'reducers/sortReducer';\r\nimport { dataReducer } from 'reducers/dataReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  appState: appReducer,\r\n  dataState: dataReducer,\r\n  filterState: filterReducer,\r\n  sortState: sortReducer,\r\n});\r\n","export const FETCH_DATA_PENDING = 'FETCH_DATA_PENDING';\r\nexport const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\r\nexport const FETCH_DATA_ERROR = 'FETCH_DATA_ERROR';\r\n\r\nexport const SET_SORT_PENDING = 'SET_SORT_PENDING';\r\nexport const SET_SORT_SUCCESS = 'SET_SORT_SUCCESS';\r\n\r\nexport const SEARCH_DATA_REQUEST = 'SEARCH_DATA_REQUEST';\r\nexport const SEARCH_DATA_SUCCESS = 'SEARCH_DATA_SUCCESS';\r\nexport const SEARCH_POPUP = 'SEARCH_POPUP';\r\nexport const TOGGLE_STATE = 'TOGGLE_STATE';\r\nexport const SET_ENUM_FILTER_PENDING = 'SET_ENUM_FILTER_PENDING';\r\nexport const SET_ENUM_FILTER_SUCCESS = 'SET_ENUM_FILTER_SUCCESS';\r\nexport const GLOBAL_SEARCH_PENDING = 'GLOBAL_SEARCH_PENDING';\r\nexport const GLOBAL_SEARCH_SUCCESS = 'GLOBAL_SEARCH_SUCCESS';\r\n\r\nexport const SET_VIRTUALIZATION = 'SET_VIRTUALIZATION';\r\nexport const SET_SELECT_ROW = 'SET_SELECT_ROW';\r\nexport const DELETE_ROWS = 'DELETE_ROWS';\r\nexport const SET_HIDDEN_COLUMNS = 'SET_HIDDEN_COLUMNS';\r\n","export const DEFAULT_CONFIG = {\r\n  DATA_LENGTH: 1000,\r\n  MAX_SCORE: 3000,\r\n  MAX_AMOUNT: 10000,\r\n  FIXED_ROW_HEIGHT: 40,\r\n};\r\n\r\nexport const BASE_URL =\r\n  'https://vpic.nhtsa.dot.gov/api/vehicles/GetEquipmentPlantCodes?year=2020&equipmentType=1&reportType=all&format=json';\r\n\r\n// API with 10000+ records\r\n// 'http://apiv3.iucnredlist.org/api/v3/species/page/0?token=9bb4facb6d23f48efbf424bb05c0c1ef1cf6f468393bc745d42179ac4aca5fee';\r\n\r\nexport const ENUM_CONFIG = ['Admin', 'Student', 'Mentor', 'Worker'];\r\n\r\nexport const DATA_TYPES = {\r\n  HIDDEN_TYPE: 'hidden',\r\n  AVATAR_TYPE: 'avatar',\r\n  TEXT_TYPE: 'text',\r\n  OBJECT_TYPE: 'object',\r\n  NUMBER_TYPE: 'number',\r\n  BOOL_TYPE: 'boolean',\r\n  DATE_TYPE: 'date',\r\n};\r\n\r\nexport const MAP = {\r\n  0: {\r\n    name: 'id',\r\n    title: '',\r\n    columnWidth: '50px',\r\n    isHidden: true,\r\n    dataType: DATA_TYPES.HIDDEN_TYPE,\r\n    leftPosition: 0,\r\n    sticky: true,\r\n  },\r\n  1: {\r\n    name: 'avatar',\r\n    title: '',\r\n    columnWidth: '45px',\r\n    dataType: DATA_TYPES.AVATAR_TYPE,\r\n    leftPosition: 50,\r\n    sticky: true,\r\n  },\r\n  2: {\r\n    name: 'name',\r\n    title: 'Name',\r\n    columnWidth: 150,\r\n    dataType: DATA_TYPES.TEXT_TYPE,\r\n    leftPosition: 95,\r\n    sticky: true,\r\n    isSortable: true,\r\n    isSearchable: true,\r\n  },\r\n  3: {\r\n    name: 'score',\r\n    title: 'Score',\r\n    columnWidth: 120,\r\n    dataType: DATA_TYPES.NUMBER_TYPE,\r\n    isSortable: true,\r\n    isSearchable: true,\r\n  },\r\n  4: {\r\n    name: 'registerDate',\r\n    title: 'Reg Date',\r\n    columnWidth: 150,\r\n    dataType: DATA_TYPES.TEXT_TYPE,\r\n    isSortable: true,\r\n    isSearchable: true,\r\n  },\r\n  5: {\r\n    name: 'lastVisit',\r\n    title: 'Last Visit',\r\n    columnWidth: 150,\r\n    dataType: DATA_TYPES.TEXT_TYPE,\r\n    isSortable: true,\r\n  },\r\n  6: {\r\n    name: 'type',\r\n    title: 'Person Type',\r\n    columnWidth: 100,\r\n    dataType: DATA_TYPES.TEXT_TYPE,\r\n  },\r\n  7: {\r\n    name: 'instant',\r\n    title: 'Instant',\r\n    columnWidth: 150,\r\n    dataType: DATA_TYPES.DATE_TYPE,\r\n  },\r\n  8: {\r\n    name: 'money',\r\n    title: 'Money',\r\n    columnWidth: 100,\r\n    dataType: DATA_TYPES.OBJECT_TYPE,\r\n  },\r\n  9: {\r\n    name: 'active',\r\n    title: 'Active',\r\n    columnWidth: 70,\r\n    dataType: DATA_TYPES.BOOL_TYPE,\r\n  },\r\n  10: {\r\n    name: 'description',\r\n    title: 'Description',\r\n    columnWidth: 350,\r\n    dataType: DATA_TYPES.TEXT_TYPE,\r\n    largeText: true,\r\n  },\r\n};\r\n\r\nexport const THROTTLE_DELAY = 1000;\r\nexport const FETCH_DELAY = 1000;\r\n","/* eslint-disable global-require */\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { rootReducer } from 'reducers/rootReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n// Utils\r\nimport { queryStringParse } from 'utils/querySting';\r\nimport { loadState, saveState } from 'utils/localStorage';\r\nimport throttle from 'lodash/throttle';\r\n\r\n// Constants\r\nimport { THROTTLE_DELAY } from 'config/default';\r\n\r\n// ONLY add 'redux-immutable-state-invariant' middleware in PROD mode\r\nconst middleware =\r\n  process.env.NODE_ENV !== 'production'\r\n    ? [require('redux-immutable-state-invariant').default(), thunk, logger]\r\n    : [thunk, logger];\r\n\r\nconst stateWithParams = queryStringParse();\r\nconst persistedState = loadState();\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  stateWithParams || persistedState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    saveState({\r\n      appState: store.getState().appState,\r\n      filterState: store.getState().filterState,\r\n      sortState: store.getState().sortState,\r\n    });\r\n  }, THROTTLE_DELAY)\r\n);\r\n\r\n/*\r\n\r\n* Redux Style Guide (Source: https://redux.js.org/style-guide/style-guide)\r\n\r\n* Priority A Rules: Essential\r\n* - Do Not Mutate State (Use tools such as `redux-immutable-state-invariant`)\r\n* - Reducers Must Not Have Side Effects\r\n* - Do Not Put Non-Serializable Values in State or Actions\r\n* - Only One Redux Store Per App\r\n\r\n* Priority B Rules: Strongly Recommended\r\n* - Use Redux Toolkit for Writing Redux Logic\r\n* - Use Immer for Writing Immutable Updates\r\n* - Structure Files as Feature Folders or Ducks\r\n* - Put as Much Logic as Possible in Reducers\r\n* - Reducers Should Own the State Shape\r\n* - Name State Slices Based On the Stored Data\r\n* - Treat Reducers as State Machines\r\n* - Normalize Complex Nested/Relational State\r\n* - Model Actions as Events, Not Setters\r\n* - Write Meaningful Action Names\r\n* - Allow Many Reducers to Respond to the Same Action\r\n* - Avoid Dispatching Many Actions Sequentially\r\n* - Evaluate Where Each Piece of State Should Live\r\n* - Connect More Components to Read Data from the Store\r\n* - Use the Object Shorthand Form of `mapDispatch` with `connect`\r\n* - Call `useSelector` Multiple Times in Function Components\r\n* - Use Static Typing\r\n* - Use the Redux DevTools Extension for Debugging\r\n* - Use Plain JavaScript Objects for State\r\n\r\n* Priority C Rules: Recommended:\r\n* - Write Action Types as domain/eventName\r\n* - Write Actions Using the Flux Standard Action Convention\r\n* - Use Action Creators\r\n* - Use Thunks for Async Logic\r\n* - Move Complex Logic Outside Components\r\n\r\n*/\r\n","import { initialState as initialStateFilter } from 'reducers/filterReducer';\r\nimport { initialState as initialStateSort } from 'reducers/sortReducer';\r\n\r\nexport const queryStringParse = () => {\r\n  const paramsString = window.location.search;\r\n\r\n  const parsedParams = {};\r\n  if (paramsString && paramsString.startsWith('?')) {\r\n    const paramsArray = paramsString.substr(1).split('&');\r\n    paramsArray.forEach(param => {\r\n      const [key, value] = param.split('=');\r\n      parsedParams[key] = key === 'filterEnums' ? value.split(',') : value;\r\n    });\r\n\r\n    const resultState = {\r\n      sortState: { ...initialStateSort },\r\n      filterState: { ...initialStateFilter, ...parsedParams },\r\n    };\r\n\r\n    return resultState;\r\n  }\r\n\r\n  return undefined;\r\n};\r\n","export const APP_STATE_IDENTIFIER = 'state';\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(APP_STATE_IDENTIFIER);\r\n\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(APP_STATE_IDENTIFIER, serializedState);\r\n  } catch (err) {\r\n    // ignore write errors\r\n  }\r\n};\r\n","// Modules\r\nimport Faker from 'faker';\r\nimport orderBy from 'lodash/orderBy';\r\n\r\n// Constants\r\nimport { DEFAULT_CONFIG, ENUM_CONFIG } from 'config/default';\r\n\r\nconst ACTIVE_TOGGLE = 1;\r\nconst TOGGLE_FIELD = 'active';\r\nconst ENUM_FIELD = 'type';\r\nconst EXCLUDED_FIELD = 'id';\r\n\r\nconst { DATA_LENGTH, MAX_SCORE, MAX_AMOUNT } = DEFAULT_CONFIG;\r\n\r\nconst getRandomEnumValue = () => {\r\n  return ENUM_CONFIG[Math.floor((Math.random() * 10) % ENUM_CONFIG.length)];\r\n};\r\n\r\nconst generateFakeRecord = () => {\r\n  return {\r\n    id: Faker.random.uuid(),\r\n    avatar: Faker.image.avatar(),\r\n    name: Faker.internet.userName(),\r\n    score: Faker.random.number(MAX_SCORE),\r\n    registerDate: Faker.date.recent().toLocaleDateString(),\r\n    lastVisit: Faker.date.weekday(),\r\n    type: getRandomEnumValue(),\r\n    instant: new Date().getTime(),\r\n    money: {\r\n      currencySymbol: Faker.finance.currencySymbol(),\r\n      amount: Faker.random.number(MAX_AMOUNT),\r\n    },\r\n    active: !(Math.floor(Math.random() * 10) % 2),\r\n    description: Faker.lorem.paragraph(),\r\n  };\r\n};\r\n\r\nexport const generateFakeData = (dataLength = DATA_LENGTH) => {\r\n  return Array.from({ length: dataLength }, () => generateFakeRecord());\r\n};\r\n\r\nexport const sortDataByFieldName = (data, sortFields, sortDirections) => {\r\n  return orderBy(data, sortFields, sortDirections);\r\n};\r\n\r\nconst objectContainsValue = (record, value) => {\r\n  return !!Object.keys(record).filter(\r\n    key =>\r\n      key !== EXCLUDED_FIELD &&\r\n      record[key]\r\n        .toString(/* some params */)\r\n        .toLowerCase()\r\n        .includes(value.toLowerCase())\r\n  ).length;\r\n};\r\n\r\nconst filterGlobal = (data, filterGlobalValue) => {\r\n  return data.filter(item => objectContainsValue(item, filterGlobalValue));\r\n};\r\n\r\nconst filterByFieldName = (data, filterKey, filterValue) => {\r\n  return data.filter(item =>\r\n    item[filterKey].toString().toLowerCase().includes(filterValue.toLowerCase())\r\n  );\r\n};\r\n\r\nconst filterByEnums = (data, filterEnums) => {\r\n  return data.filter(item => filterEnums.includes(item[ENUM_FIELD]));\r\n};\r\n\r\nconst filterByToggle = (data, filterToggle) => {\r\n  return data.filter(item => {\r\n    return (\r\n      (item[TOGGLE_FIELD] && filterToggle === ACTIVE_TOGGLE) ||\r\n      (!item[TOGGLE_FIELD] && filterToggle !== ACTIVE_TOGGLE)\r\n    );\r\n  });\r\n};\r\n\r\nexport const filterData = (\r\n  data,\r\n  filterKey,\r\n  filterValue,\r\n  filterGlobalValue,\r\n  filterToggle,\r\n  filterEnums\r\n) => {\r\n  let filteredData = [...data];\r\n\r\n  if (filterKey) {\r\n    filteredData = filterByFieldName(filteredData, filterKey, filterValue);\r\n  }\r\n\r\n  if (filterGlobalValue) {\r\n    filteredData = filterGlobal(filteredData, filterGlobalValue);\r\n  }\r\n\r\n  if (filterEnums.length) {\r\n    filteredData = filterByEnums(filteredData, filterEnums);\r\n  }\r\n\r\n  if (filterToggle) {\r\n    filteredData = filterByToggle(filteredData, filterToggle);\r\n  }\r\n\r\n  return filteredData;\r\n};\r\n\r\nexport const excludeById = (data, deletedItems) => {\r\n  return data.filter(item => !deletedItems.includes(item.id));\r\n};\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n// import purple from '@material-ui/core/colors/purple';\r\nimport red from '@material-ui/core/colors/red';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    secondary: red,\r\n  },\r\n  text: {\r\n    light: grey[100],\r\n  },\r\n  color: {\r\n    grayed: grey[100],\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const DIRECTION_VALUES = {\r\n  DEFAULT_DIRECTION: '',\r\n  ASCENDING_DIRECTION: 'asc',\r\n  DESCENDING_DIRECTION: 'desc',\r\n};\r\n\r\nexport const ACTION_DELAY = 700;\r\nexport const FILTER_DELAY = 500;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n// Modules\r\nimport debounce from 'lodash/debounce';\r\n\r\n// Constants\r\nimport { FILTER_DELAY } from 'constants/constants';\r\n\r\nexport const FilterGlobal = ({ filterGlobalValue, setFilterGlobalAction }) => {\r\n  const [inputValue, setInputValue] = useState(filterGlobalValue);\r\n\r\n  useEffect(() => {\r\n    setInputValue(filterGlobalValue);\r\n  }, [filterGlobalValue]);\r\n\r\n  const delayedSearchAction = useCallback(\r\n    debounce(value => {\r\n      setFilterGlobalAction(value);\r\n    }, FILTER_DELAY),\r\n    []\r\n  );\r\n\r\n  const handleInputChange = ({ currentTarget: { value } }) => {\r\n    setInputValue(value);\r\n    delayedSearchAction(value);\r\n  };\r\n\r\n  return (\r\n    <Grid container item>\r\n      <FormControl fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-input-search\">Search...</InputLabel>\r\n        <OutlinedInput\r\n          id=\"outlined-input-search\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton aria-label=\"global search\" edge=\"end\">\r\n                <SearchIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n          labelWidth={70}\r\n        />\r\n      </FormControl>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nFilterGlobal.propTypes = {\r\n  filterGlobalValue: PropTypes.string,\r\n  setFilterGlobalAction: PropTypes.func.isRequired,\r\n};\r\n\r\nFilterGlobal.defaultProps = {\r\n  filterGlobalValue: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// Constants\r\nimport { ENUM_CONFIG } from 'config/default';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.primary.contrastText,\r\n  },\r\n}));\r\n\r\nconst animatedComponent = makeAnimated();\r\nconst options = ENUM_CONFIG.map(item => ({ value: item, label: item }));\r\n\r\nexport const FilterEnum = ({ filterEnums, setEnumFilterAction }) => {\r\n  const classes = useStyles();\r\n  const defaultValue = filterEnums.map(item => ({ value: item, label: item }));\r\n\r\n  const handleChange = newValue => {\r\n    const enumsSelected = newValue ? newValue.map(item => item.value) : [];\r\n    setEnumFilterAction(enumsSelected);\r\n  };\r\n\r\n  return (\r\n    <Grid container item>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"overline\" gutterBottom>\r\n          Person type\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.root}>\r\n        <Select\r\n          defaultValue={defaultValue}\r\n          closeMenuOnSelect={false}\r\n          components={animatedComponent}\r\n          isMulti\r\n          options={options}\r\n          onChange={handleChange}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nFilterEnum.propTypes = {\r\n  filterEnums: PropTypes.arrayOf(PropTypes.string),\r\n  setEnumFilterAction: PropTypes.func.isRequired,\r\n};\r\n\r\nFilterEnum.defaultProps = {\r\n  filterEnums: [],\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  switchBase: {\r\n    '&$checked': {\r\n      color: theme.palette.common.white,\r\n      '& + $track': {\r\n        backgroundColor: '#52d869',\r\n        opacity: 1,\r\n      },\r\n    },\r\n    '&$focusVisible $thumb': {\r\n      color: '#52d869',\r\n      border: '6px solid #fff',\r\n    },\r\n  },\r\n  track: {},\r\n  checked: {},\r\n  thumb: {},\r\n  focusVisible: {},\r\n}));\r\n\r\nexport const ToggleFilter = ({ filterToggleState, setToggleAction }) => {\r\n  const classes = useStyles();\r\n\r\n  const toggleChangeHandler = ({ currentTarget: { value, checked } }) => {\r\n    setToggleAction(+value, !checked);\r\n  };\r\n\r\n  return (\r\n    <Grid container item>\r\n      <Grid item sm={12}>\r\n        <Typography variant=\"overline\" gutterBottom>\r\n          Activity\r\n        </Typography>\r\n      </Grid>\r\n      <Grid container item sm={12}>\r\n        <Grid item sm={6}>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                value={1}\r\n                classes={{\r\n                  switchBase: classes.switchBase,\r\n                  thumb: classes.thumb,\r\n                  track: classes.track,\r\n                  checked: classes.checked,\r\n                }}\r\n                checked={filterToggleState === 1}\r\n                onChange={toggleChangeHandler}\r\n              />\r\n            }\r\n            label=\"Active\"\r\n          />\r\n        </Grid>\r\n        <Grid item sm={6}>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                value={2}\r\n                checked={filterToggleState === 2}\r\n                classes={{\r\n                  switchBase: classes.switchBase,\r\n                  thumb: classes.thumb,\r\n                  track: classes.track,\r\n                  checked: classes.checked,\r\n                }}\r\n                onChange={toggleChangeHandler}\r\n              />\r\n            }\r\n            label=\"Inactive\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nToggleFilter.propTypes = {\r\n  filterToggleState: PropTypes.number.isRequired,\r\n  setToggleAction: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// Components\r\nimport { FilterGlobal } from 'components/FilterGlobal/FilterGlobal';\r\nimport { FilterEnum } from 'components/FilterEnum/FilterEnum';\r\nimport { ToggleFilter } from 'components/ToggleFilter/ToggleFilter';\r\n\r\nconst useStyles = makeStyles({\r\n  filterContainer: {\r\n    // backgroundColor: 'red',\r\n  },\r\n});\r\n\r\nexport const Filters = ({\r\n  filterState,\r\n  setToggleAction,\r\n  setEnumFilterAction,\r\n  setFilterGlobalAction,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3} className={classes.filterContainer}>\r\n      <Grid item>\r\n        <Typography\r\n          variant=\"h6\"\r\n          gutterBottom\r\n          style={{ textTransform: 'uppercase' }}\r\n        >\r\n          Filter Data\r\n        </Typography>\r\n      </Grid>\r\n      <FilterGlobal\r\n        filterGlobalValue={filterState.filterGlobalValue}\r\n        setFilterGlobalAction={setFilterGlobalAction}\r\n      />\r\n      <FilterEnum\r\n        filterEnums={filterState.filterEnums}\r\n        setEnumFilterAction={setEnumFilterAction}\r\n      />\r\n      <ToggleFilter\r\n        filterToggleState={filterState.filterToggleState}\r\n        setToggleAction={setToggleAction}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nFilters.propTypes = {\r\n  filterState: PropTypes.shape({\r\n    filterGlobalValue: PropTypes.string,\r\n    filterEnums: PropTypes.arrayOf(PropTypes.string),\r\n    filterToggleState: PropTypes.number,\r\n  }).isRequired,\r\n  setToggleAction: PropTypes.func.isRequired,\r\n  setEnumFilterAction: PropTypes.func.isRequired,\r\n  setFilterGlobalAction: PropTypes.func.isRequired,\r\n};\r\n","import { connect } from 'react-redux';\r\n\r\n// Actions\r\nimport {\r\n  setToggle,\r\n  setEnumFilter,\r\n  setFilterGlobal,\r\n} from 'actions/filterActions';\r\n\r\n// Components\r\nimport { Filters } from 'components/Filters/Filters';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filterState: state.filterState,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setToggleAction: (toggleValue, checkedStatus) =>\r\n      dispatch(setToggle(toggleValue, checkedStatus)),\r\n    setEnumFilterAction: enumsSelected =>\r\n      dispatch(setEnumFilter(enumsSelected)),\r\n    setFilterGlobalAction: filterGlobalValue =>\r\n      dispatch(setFilterGlobal(filterGlobalValue)),\r\n  };\r\n};\r\n\r\nexport const FiltersContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Filters);\r\n","import { FILTER_DELAY } from 'constants/constants';\r\nimport * as actionTypes from 'constants/actionTypes';\r\n\r\nexport const setFilterData = (filterKey, filterValue) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: actionTypes.SEARCH_DATA_REQUEST,\r\n      payload: filterValue,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: actionTypes.SEARCH_DATA_SUCCESS,\r\n        payload: { filterKey, filterValue },\r\n      });\r\n    }, FILTER_DELAY);\r\n  };\r\n};\r\n\r\nexport const setSearchPopup = searchPopupName => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: actionTypes.SEARCH_POPUP,\r\n      payload: searchPopupName,\r\n    });\r\n  };\r\n};\r\n\r\nexport const setToggle = (toggleValue, checkedStatus) => {\r\n  return (dispatch, getState) => {\r\n    const { filterToggleState } = getState().filterState;\r\n\r\n    if (!filterToggleState || filterToggleState !== toggleValue) {\r\n      dispatch({\r\n        type: actionTypes.TOGGLE_STATE,\r\n        payload: toggleValue,\r\n      });\r\n    } else if (checkedStatus) {\r\n      dispatch({\r\n        type: actionTypes.TOGGLE_STATE,\r\n        payload: 0,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setEnumFilter = enumsSelected => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: actionTypes.SET_ENUM_FILTER_PENDING,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: actionTypes.SET_ENUM_FILTER_SUCCESS,\r\n        payload: enumsSelected,\r\n      });\r\n    }, FILTER_DELAY);\r\n  };\r\n};\r\n\r\nexport const setFilterGlobal = filterGlobalValue => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: actionTypes.GLOBAL_SEARCH_PENDING,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: actionTypes.GLOBAL_SEARCH_SUCCESS,\r\n        payload: filterGlobalValue,\r\n      });\r\n    }, FILTER_DELAY);\r\n  };\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\n// Utils\r\nimport { filterData } from 'utils/dataUtils';\r\n\r\nconst dataSelector = state => state.dataState && state.dataState.data;\r\nconst filterSelector = state => state.filterState;\r\n\r\nexport const filterDataSelector = createSelector(\r\n  [dataSelector, filterSelector],\r\n  (dataCollection, filter) => {\r\n    // console.log('%c filterDataSelector() called: ', 'color: red;');\r\n\r\n    if (filter) {\r\n      const filteredData = filterData(\r\n        dataCollection,\r\n        filter.filterKey,\r\n        filter.filterValue,\r\n        filter.filterGlobalValue,\r\n        filter.filterToggleState,\r\n        filter.filterEnums\r\n      );\r\n\r\n      return filteredData;\r\n    }\r\n\r\n    return dataCollection;\r\n  }\r\n);\r\n","import { createSelector } from 'reselect';\r\n\r\n// Utils\r\nimport { sortDataByFieldName } from 'utils/dataUtils';\r\n\r\n// Selectors\r\nimport { filterDataSelector } from 'selectors/filterDataSelector';\r\n\r\nconst sortSelector = state => state.sortState;\r\n\r\nexport const processDataSelector = createSelector(\r\n  [filterDataSelector, sortSelector],\r\n  (filteredData, sort) => {\r\n    // console.log('%c processDataSelector() called: ', 'color: red;');\r\n    // console.log('%c dataCollection: ', 'color: red;', dataCollection);\r\n    // console.log('%c in processDataSelector() filter: ', 'color: red;', filter);\r\n    // console.log('%c in processDataSelector() sort: ', 'color: red;', sort);\r\n\r\n    if (sort && sort.sortKeys.length) {\r\n      const sortedData = sortDataByFieldName(\r\n        filteredData,\r\n        sort.sortKeys,\r\n        sort.directions\r\n      );\r\n\r\n      return sortedData;\r\n    }\r\n\r\n    return filteredData;\r\n  }\r\n);\r\n","import { createSelector } from 'reselect';\r\n\r\n// Selectors\r\nimport { processDataSelector } from 'selectors/processDataSelector';\r\n\r\n// Constants\r\nimport { MAP } from 'config/default';\r\n\r\nconst hiddenColumnsSelector = state =>\r\n  state.appState && state.appState.hiddenColumns;\r\n\r\nexport const csvDataSelector = createSelector(\r\n  [processDataSelector, hiddenColumnsSelector],\r\n  (processedData, hiddenColumns) => {\r\n    const csvData = processedData.map(item => {\r\n      const filteredItem = {};\r\n      Object.keys(item).forEach((key, index) => {\r\n        if (!MAP[index].isHidden && !hiddenColumns[key]) {\r\n          if (typeof item[key] === 'object') {\r\n            filteredItem[key] = Object.values(item[key]).join(' ');\r\n          } else {\r\n            filteredItem[key] = item[key];\r\n          }\r\n        }\r\n      });\r\n\r\n      return filteredItem;\r\n    });\r\n\r\n    return csvData;\r\n  }\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\n\r\n// Modules\r\nimport { CSVLink } from 'react-csv';\r\n\r\nexport const CSVExport = ({ csvData }) => {\r\n  return (\r\n    <Grid item>\r\n      <CSVLink\r\n        className=\"csv-link\"\r\n        data={csvData}\r\n        filename=\"data-grid.csv\"\r\n        target=\"_blank\"\r\n        style={{ textDecoration: 'none' }}\r\n      >\r\n        <Button variant=\"outlined\" startIcon={<SaveAltIcon />}>\r\n          Export to CSV\r\n        </Button>\r\n      </CSVLink>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nCSVExport.propTypes = {\r\n  csvData: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nCSVExport.defaultProps = {\r\n  csvData: [],\r\n};\r\n","import { connect } from 'react-redux';\r\n\r\n// Selectors\r\nimport { csvDataSelector } from 'selectors/csvDataSelector';\r\n\r\n// Components\r\nimport { CSVExport } from 'components/CSVExport/CSVExport';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    csvData: csvDataSelector(state),\r\n  };\r\n};\r\n\r\nexport const CSVExportContainer = connect(mapStateToProps)(CSVExport);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport const SettingVirtualization = ({\r\n  virtualizationState,\r\n  setVirtualizationAction,\r\n}) => {\r\n  const handleChange = ({ currentTarget: { checked } }) => {\r\n    setVirtualizationAction(checked);\r\n  };\r\n\r\n  return (\r\n    <Grid item>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch checked={virtualizationState} onChange={handleChange} />\r\n        }\r\n        label=\"Virtualization\"\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nSettingVirtualization.propTypes = {\r\n  virtualizationState: PropTypes.bool,\r\n  setVirtualizationAction: PropTypes.func,\r\n};\r\n\r\nSettingVirtualization.defaultProps = {\r\n  virtualizationState: false,\r\n  setVirtualizationAction: undefined,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport const SettingDeleteRows = ({ selectionState, deleteRowsAction }) => {\r\n  return (\r\n    <Grid item>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        disabled={!selectionState}\r\n        onClick={deleteRowsAction}\r\n        startIcon={<DeleteIcon />}\r\n      >\r\n        Delete selected rows\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nSettingDeleteRows.propTypes = {\r\n  selectionState: PropTypes.bool,\r\n  deleteRowsAction: PropTypes.func,\r\n};\r\n\r\nSettingDeleteRows.defaultProps = {\r\n  selectionState: false,\r\n  deleteRowsAction: undefined,\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { MenuItem } from '@material-ui/core';\r\n\r\nexport const SettingVisibility = ({ hiddenColumns, setVisibilityAction }) => {\r\n  const [anchorEl, setAnchorElement] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleChange = ({ currentTarget: { checked } }, name) => {\r\n    setVisibilityAction(name, !checked);\r\n  };\r\n\r\n  const handleClick = event => {\r\n    setAnchorElement(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorElement(null);\r\n  };\r\n\r\n  return (\r\n    <Grid item>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu anchorEl={anchorEl} keepMounted open={open} onClose={handleClose}>\r\n        {Object.keys(hiddenColumns).map(key => (\r\n          <MenuItem key={key}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={!hiddenColumns[key]}\r\n                  onChange={evt => handleChange(evt, key)}\r\n                />\r\n              }\r\n              label={key}\r\n            />\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nSettingVisibility.propTypes = {\r\n  hiddenColumns: PropTypes.objectOf(PropTypes.bool),\r\n  setVisibilityAction: PropTypes.func,\r\n};\r\n\r\nSettingVisibility.defaultProps = {\r\n  hiddenColumns: {},\r\n  setVisibilityAction: undefined,\r\n};\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\n\r\nexport const SettingQueryString = () => {\r\n  return (\r\n    <Grid item>\r\n      <Link href=\"?filterEnums=Mentor&filterGlobalValue=Man\">\r\n        <Button variant=\"outlined\" startIcon={<LinkIcon />}>\r\n          QueryString\r\n        </Button>\r\n      </Link>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// Containers\r\nimport { CSVExportContainer } from 'containers/CSVExportContainer';\r\n\r\n// Components\r\nimport { SettingVirtualization } from 'components/SettingVirtualization/SettingVirtualization';\r\nimport { SettingDeleteRows } from 'components/SettingDeleteRows/SettingDeleteRows';\r\nimport { SettingVisibility } from 'components/SettingVisibility/SettingVisibility';\r\nimport { SettingQueryString } from 'components/SettingQueryString/SettingQueryString';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  sticky: {\r\n    position: 'sticky',\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 11,\r\n  },\r\n  settingsContainer: {\r\n    height: '95px',\r\n    paddingLeft: theme.spacing(2),\r\n    backgroundColor: '#ffffff',\r\n  },\r\n}));\r\n\r\nexport const Settings = ({\r\n  appState,\r\n  dataState,\r\n  setVirtualizationAction,\r\n  deleteRowsAction,\r\n  setVisibilityAction,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      justify=\"space-between\"\r\n      className={clsx(classes.sticky, classes.settingsContainer)}\r\n    >\r\n      <Grid\r\n        container\r\n        item\r\n        alignItems=\"center\"\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        spacing={2}\r\n      >\r\n        <SettingDeleteRows\r\n          selectionState={!!dataState.selectedItems.length}\r\n          deleteRowsAction={deleteRowsAction}\r\n        />\r\n        <SettingVirtualization\r\n          virtualizationState={appState.virtualizationState}\r\n          setVirtualizationAction={setVirtualizationAction}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        item\r\n        alignItems=\"center\"\r\n        justify=\"flex-end\"\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        spacing={1}\r\n      >\r\n        <SettingQueryString />\r\n        <CSVExportContainer />\r\n        <SettingVisibility\r\n          hiddenColumns={appState.hiddenColumns}\r\n          setVisibilityAction={setVisibilityAction}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nSettings.propTypes = {\r\n  appState: PropTypes.shape({\r\n    virtualizationState: PropTypes.bool,\r\n    hiddenColumns: PropTypes.objectOf(PropTypes.bool),\r\n  }).isRequired,\r\n  dataState: PropTypes.shape({\r\n    selectedItems: PropTypes.arrayOf(PropTypes.string),\r\n  }).isRequired,\r\n  setVirtualizationAction: PropTypes.func,\r\n  deleteRowsAction: PropTypes.func,\r\n  setVisibilityAction: PropTypes.func,\r\n};\r\n\r\nSettings.defaultProps = {\r\n  setVirtualizationAction: undefined,\r\n  deleteRowsAction: undefined,\r\n  setVisibilityAction: undefined,\r\n};\r\n","import * as actionTypes from 'constants/actionTypes';\r\n\r\nexport const setVirtualization = virtualizationState => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: actionTypes.SET_VIRTUALIZATION,\r\n      payload: virtualizationState,\r\n    });\r\n  };\r\n};\r\n\r\nexport const setVisibility = (fieldName, hiddenState) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: actionTypes.SET_HIDDEN_COLUMNS,\r\n      payload: {\r\n        fieldName,\r\n        hiddenState,\r\n      },\r\n    });\r\n  };\r\n};\r\n","import { connect } from 'react-redux';\r\n\r\n// Components\r\nimport { Settings } from 'components/Settings/Settings';\r\n\r\n// Actions\r\nimport { setVirtualization, setVisibility } from 'actions/settingsAction';\r\nimport { deleteRows } from 'actions/dataActions';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    appState: state.appState,\r\n    dataState: state.dataState,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setVirtualizationAction: virtualizationState =>\r\n      dispatch(setVirtualization(virtualizationState)),\r\n    deleteRowsAction: () => dispatch(deleteRows()),\r\n    setVisibilityAction: (fieldName, hiddenState) =>\r\n      dispatch(setVisibility(fieldName, hiddenState)),\r\n  };\r\n};\r\n\r\nexport const SettingsContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Settings);\r\n","/* eslint-disable no-unused-vars */\r\n// Utils\r\nimport { generateFakeData } from 'utils/dataUtils';\r\n\r\n// Constants\r\nimport { /* BASE_URL, */ FETCH_DELAY } from 'config/default';\r\nimport * as actionTypes from 'constants/actionTypes';\r\n\r\nconst handleErrors = response => {\r\n  if (!response.ok) {\r\n    throw new Error(response.statusText);\r\n  }\r\n\r\n  return response;\r\n};\r\n\r\nconst fetchDataPending = () => {\r\n  return {\r\n    type: actionTypes.FETCH_DATA_PENDING,\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = data => {\r\n  return {\r\n    type: actionTypes.FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nconst fetchDataError = err => {\r\n  return {\r\n    type: actionTypes.FETCH_DATA_ERROR,\r\n    payload: err,\r\n  };\r\n};\r\n\r\nexport const fetchData = dataLength => {\r\n  return dispatch => {\r\n    dispatch(fetchDataPending());\r\n\r\n    setTimeout(() => {\r\n      // Generate data\r\n      const fetchedData = generateFakeData(dataLength);\r\n      dispatch(fetchDataSuccess(fetchedData));\r\n\r\n      if (!fetchedData) {\r\n        dispatch(fetchDataError('Something went wrong on fetching data...'));\r\n      }\r\n    }, FETCH_DELAY);\r\n\r\n    // TODO: Rewrite fetch part for real API, some day...\r\n    // return fetch(BASE_URL)\r\n    //   .then(handleErrors)\r\n    //   .then(res => res.json())\r\n    //   .then(res => {\r\n    //     dispatch(fetchDataSuccess(res));\r\n    //     return res;\r\n    //   })\r\n    //   .catch(err => {\r\n    //     dispatch(fetchDataError(err));\r\n    //   });\r\n  };\r\n};\r\n\r\nexport const setSelection = selectedItem => {\r\n  return (dispatch, getState) => {\r\n    const selectedItems = [...getState().dataState.selectedItems];\r\n\r\n    const itemIndex = selectedItems.indexOf(selectedItem);\r\n    if (itemIndex !== -1) {\r\n      selectedItems.splice(itemIndex, 1);\r\n    } else {\r\n      selectedItems.push(selectedItem);\r\n    }\r\n\r\n    dispatch({\r\n      type: actionTypes.SET_SELECT_ROW,\r\n      payload: selectedItems,\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteRows = () => {\r\n  return (dispatch, getState) => {\r\n    const { selectedItems, data } = getState().dataState;\r\n\r\n    dispatch({\r\n      type: actionTypes.DELETE_ROWS,\r\n      payload: {\r\n        selectedItems: [],\r\n        data: data.filter(item => !selectedItems.includes(item.id)),\r\n      },\r\n    });\r\n  };\r\n};\r\n","import * as actionTypes from 'constants/actionTypes';\r\n\r\nimport { ACTION_DELAY, DIRECTION_VALUES } from 'constants/constants';\r\n\r\n// export const SORT_DATA_SUCCESS = 'SORT_DATA_SUCCESS';\r\n\r\n// const sortDataByField = (sortField, shiftKey, sortFields, sortDirections) => {\r\n//   const fieldIndex = sortFields.indexOf(sortField);\r\n\r\n//   if (\r\n//     !shiftKey &&\r\n//     ((fieldIndex !== 0 && sortFields.length > 0) ||\r\n//       (fieldIndex === 0 && sortFields.length > 1))\r\n//   ) {\r\n//     sortFields.length = 0;\r\n//     sortDirections.length = 0;\r\n//   }\r\n\r\n//   if (fieldIndex < 0) {\r\n//     sortFields.push(sortField);\r\n//     sortDirections.push(DIRECTION_VALUES.ASCENDING_DIRECTION);\r\n//   } else if (\r\n//     sortDirections[fieldIndex] === DIRECTION_VALUES.ASCENDING_DIRECTION\r\n//   ) {\r\n//     sortDirections[fieldIndex] = DIRECTION_VALUES.DESCENDING_DIRECTION;\r\n//   } else {\r\n//     sortFields.splice(fieldIndex, 1);\r\n//     sortDirections.splice(fieldIndex, 1);\r\n//   }\r\n\r\n//   return {\r\n//     sortFields,\r\n//     sortDirections,\r\n//   };\r\n// };\r\n\r\n// export const sortData = (sortField, shiftKey) => {\r\n//   return (dispatch, getState) => {\r\n//     const { sortFields, sortDirections } = getState().sortState;\r\n\r\n//     setTimeout(() => {\r\n//       const payload = sortDataByField(\r\n//         sortField,\r\n//         shiftKey,\r\n//         sortFields,\r\n//         sortDirections\r\n//       );\r\n\r\n//       dispatch({\r\n//         type: SORT_DATA_SUCCESS,\r\n//         payload: { ...payload },\r\n//       });\r\n//     }, ACTION_DELAY);\r\n//   };\r\n// };\r\n\r\nconst setSortValues = (sortKey, shiftKey, sortKeysArg, directionsArg) => {\r\n  const sortKeys = [...sortKeysArg];\r\n  const directions = [...directionsArg];\r\n  const fieldIndex = sortKeys.indexOf(sortKey);\r\n\r\n  if (\r\n    !shiftKey &&\r\n    ((fieldIndex !== 0 && sortKeys.length > 0) ||\r\n      (fieldIndex === 0 && sortKeys.length > 1))\r\n  ) {\r\n    sortKeys.length = 0;\r\n    directions.length = 0;\r\n  }\r\n\r\n  if (fieldIndex < 0) {\r\n    sortKeys.push(sortKey);\r\n    directions.push(DIRECTION_VALUES.ASCENDING_DIRECTION);\r\n  } else if (directions[fieldIndex] === DIRECTION_VALUES.ASCENDING_DIRECTION) {\r\n    directions[fieldIndex] = DIRECTION_VALUES.DESCENDING_DIRECTION;\r\n  } else {\r\n    sortKeys.splice(fieldIndex, 1);\r\n    directions.splice(fieldIndex, 1);\r\n  }\r\n\r\n  return {\r\n    sortKeys,\r\n    directions,\r\n  };\r\n};\r\n\r\nexport const setSortParams = (sortKey, shiftFlag) => {\r\n  return (dispatch, getState) => {\r\n    const { sortKeys, directions } = getState().sortState;\r\n\r\n    dispatch({\r\n      type: actionTypes.SET_SORT_PENDING,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      const payload = setSortValues(sortKey, shiftFlag, sortKeys, directions);\r\n\r\n      dispatch({\r\n        type: actionTypes.SET_SORT_SUCCESS,\r\n        payload,\r\n      });\r\n    }, ACTION_DELAY);\r\n  };\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n// Constants\r\nimport { DIRECTION_VALUES } from 'constants/constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  sortBlock: {\r\n    flexWrap: 'nowrap',\r\n  },\r\n  iconSort: {\r\n    marginLeft: '0.2rem',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      opacity: '0.5',\r\n    },\r\n  },\r\n  selected: {\r\n    opacity: props => (props.sortState === '' ? '0.2' : '1'),\r\n    color: props =>\r\n      props.sortState === '' ? 'initial' : theme.palette.primary.main,\r\n  },\r\n  sortOrderText: {\r\n    fontSize: '0.6rem',\r\n    color: theme.palette.secondary.light,\r\n  },\r\n}));\r\n\r\nexport const SortItems = ({\r\n  fieldName,\r\n  sortState,\r\n  sortOrder,\r\n  setSortParamsAction,\r\n}) => {\r\n  const { DESCENDING_DIRECTION } = DIRECTION_VALUES;\r\n  const classes = useStyles({ sortState });\r\n\r\n  const sortBy = ({ shiftKey }) => {\r\n    setSortParamsAction(fieldName, shiftKey);\r\n  };\r\n\r\n  return (\r\n    <Grid container item alignItems=\"center\" className={classes.sortBlock}>\r\n      {sortState !== DESCENDING_DIRECTION && (\r\n        <ExpandLessIcon\r\n          aria-label=\"sort ascending\"\r\n          size=\"small\"\r\n          className={`${classes.iconSort} ${classes.selected}`}\r\n          onClick={sortBy}\r\n        />\r\n      )}\r\n\r\n      {sortState === DESCENDING_DIRECTION && (\r\n        <ExpandMoreIcon\r\n          aria-label=\"sort ascending\"\r\n          size=\"small\"\r\n          className={`${classes.iconSort} ${classes.selected}`}\r\n          onClick={sortBy}\r\n        />\r\n      )}\r\n      {sortOrder !== -1 && (\r\n        <Box component=\"span\" className={classes.sortOrderText}>\r\n          {sortOrder + 1}\r\n        </Box>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nSortItems.propTypes = {\r\n  fieldName: PropTypes.string.isRequired,\r\n  sortState: PropTypes.string,\r\n  sortOrder: PropTypes.number,\r\n  setSortParamsAction: PropTypes.func,\r\n};\r\n\r\nSortItems.defaultProps = {\r\n  sortState: '',\r\n  sortOrder: -1,\r\n  setSortParamsAction: undefined,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  searchContainer: {\r\n    position: 'relative',\r\n  },\r\n  searchPopup: {\r\n    position: 'absolute',\r\n    bottom: '-110px',\r\n    right: '0',\r\n    width: '200px',\r\n    padding: '7px',\r\n    borderRadius: '2px',\r\n    backgroundColor: theme.color.grayed,\r\n    boxShadow: '0 0 5px 2px #a0a0b3',\r\n    zIndex: '20',\r\n  },\r\n  activeSearch: {\r\n    color: theme.palette.secondary.light,\r\n  },\r\n  inputRoot: {\r\n    '& .MuiOutlinedInput-root': {\r\n      '& input': {\r\n        backgroundColor: theme.palette.grey[50],\r\n        padding: '10px',\r\n      },\r\n    },\r\n  },\r\n  buttonsBlock: {\r\n    padding: '10px',\r\n  },\r\n}));\r\n\r\nexport const FilterItems = ({\r\n  fieldName,\r\n  filterKey,\r\n  filterValue,\r\n  searchPopupName,\r\n  setFilterDataAction,\r\n  setSearchPopupAction,\r\n}) => {\r\n  const [visibleState, setVisibleState] = useState(false);\r\n  const [searchValueState, setSearchValueState] = useState({\r\n    value: '',\r\n    isActive: false,\r\n  });\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (fieldName === searchPopupName) {\r\n      setVisibleState(true);\r\n\r\n      if (fieldName === filterKey) {\r\n        setSearchValueState({ value: filterValue, isActive: !!filterValue });\r\n      }\r\n    } else {\r\n      setVisibleState(false);\r\n    }\r\n  }, [fieldName, filterKey, filterValue, searchPopupName]);\r\n\r\n  const filterHandler = () => {\r\n    setFilterDataAction(fieldName, searchValueState.value);\r\n    setSearchPopupAction('');\r\n  };\r\n\r\n  const resetHandler = () => {\r\n    setFilterDataAction(fieldName, '');\r\n    setSearchPopupAction('');\r\n  };\r\n\r\n  const popupHandler = () => {\r\n    setSearchPopupAction(fieldName === searchPopupName ? '' : fieldName);\r\n  };\r\n\r\n  const inputChangeHandler = evt => {\r\n    setSearchValueState({\r\n      ...searchValueState,\r\n      value: evt.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid container item justify=\"flex-end\" className={classes.searchContainer}>\r\n      {visibleState && (\r\n        <Grid container className={classes.searchPopup}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            placeholder=\"Search value\"\r\n            value={searchValueState.value}\r\n            onChange={inputChangeHandler}\r\n            className={classes.inputRoot}\r\n          />\r\n          <Grid\r\n            container\r\n            item\r\n            justify=\"space-between\"\r\n            spacing={1}\r\n            className={classes.buttonsBlock}\r\n          >\r\n            <Button variant=\"contained\" onClick={filterHandler}>\r\n              Search\r\n            </Button>\r\n            <Button variant=\"contained\" onClick={resetHandler}>\r\n              Reset\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      <IconButton aria-label=\"search icon\" size=\"small\" onClick={popupHandler}>\r\n        <SearchIcon\r\n          size=\"inherit\"\r\n          className={clsx(\r\n            fieldName === filterKey && filterValue && classes.activeSearch\r\n          )}\r\n        />\r\n      </IconButton>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nFilterItems.propTypes = {\r\n  fieldName: PropTypes.string,\r\n  filterKey: PropTypes.string,\r\n  filterValue: PropTypes.string,\r\n  searchPopupName: PropTypes.string,\r\n  setFilterDataAction: PropTypes.func.isRequired,\r\n  setSearchPopupAction: PropTypes.func.isRequired,\r\n};\r\n\r\nFilterItems.defaultProps = {\r\n  fieldName: 'fieldName',\r\n  filterKey: '',\r\n  filterValue: '',\r\n  searchPopupName: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// Components\r\nimport { SortItems } from 'components/SortItems/SortItems';\r\nimport { FilterItems } from 'components/FilterItems/FilterItems';\r\n\r\nconst useStyles = makeStyles({\r\n  headerDataCell: {\r\n    padding: '0 5px',\r\n    flexWrap: 'nowrap',\r\n  },\r\n  titleContainer: {\r\n    flexWrap: 'nowrap',\r\n  },\r\n  cellTitle: {\r\n    userSelect: 'none',\r\n    whiteSpace: 'nowrap',\r\n    textTransform: 'uppercase',\r\n  },\r\n  sticky: {\r\n    position: 'sticky',\r\n    top: 0,\r\n    left: 0,\r\n    backgroundColor: '#ffffff',\r\n    zIndex: '11',\r\n  },\r\n  bordered: {\r\n    borderRight: '1px solid #bfbfbf',\r\n  },\r\n});\r\n\r\nexport const HeaderDataCell = props => {\r\n  const {\r\n    title,\r\n    isSortable,\r\n    isSearchable,\r\n    fieldName,\r\n    sortState,\r\n    sortOrder,\r\n    setSortParamsAction,\r\n    filterKey,\r\n    filterValue,\r\n    searchPopupName,\r\n    setFilterDataAction,\r\n    setSearchPopupAction,\r\n    isHidden,\r\n    isSticky,\r\n    style,\r\n  } = props;\r\n  const classes = useStyles();\r\n\r\n  if (isHidden) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      alignItems=\"center\"\r\n      className={clsx(\r\n        classes.headerDataCell,\r\n        isSticky && classes.sticky,\r\n        title === 'Name' && classes.bordered\r\n      )}\r\n      style={style}\r\n    >\r\n      <Grid\r\n        container\r\n        item\r\n        alignItems=\"center\"\r\n        className={classes.titleContainer}\r\n      >\r\n        {title && (\r\n          <Typography variant=\"body2\" className={classes.cellTitle}>\r\n            {title}\r\n          </Typography>\r\n        )}\r\n        {isSortable && (\r\n          <SortItems\r\n            fieldName={fieldName}\r\n            sortState={sortState}\r\n            sortOrder={sortOrder}\r\n            setSortParamsAction={setSortParamsAction}\r\n          />\r\n        )}\r\n      </Grid>\r\n      {isSearchable && (\r\n        <FilterItems\r\n          fieldName={fieldName}\r\n          filterKey={filterKey}\r\n          filterValue={filterValue}\r\n          searchPopupName={searchPopupName}\r\n          setFilterDataAction={setFilterDataAction}\r\n          setSearchPopupAction={setSearchPopupAction}\r\n        />\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nHeaderDataCell.propTypes = {\r\n  title: PropTypes.string,\r\n  fieldName: PropTypes.string,\r\n  sortState: PropTypes.string,\r\n  sortOrder: PropTypes.number,\r\n  isSortable: PropTypes.bool,\r\n  isSearchable: PropTypes.bool,\r\n  setSortParamsAction: PropTypes.func,\r\n  filterKey: PropTypes.string,\r\n  filterValue: PropTypes.string,\r\n  searchPopupName: PropTypes.string,\r\n  setFilterDataAction: PropTypes.func,\r\n  setSearchPopupAction: PropTypes.func,\r\n  isHidden: PropTypes.bool,\r\n  isSticky: PropTypes.bool,\r\n  style: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n};\r\n\r\nHeaderDataCell.defaultProps = {\r\n  title: 'CellTitle',\r\n  fieldName: '',\r\n  sortState: '',\r\n  sortOrder: -1,\r\n  isSortable: false,\r\n  isSearchable: false,\r\n  setSortParamsAction: undefined,\r\n  filterKey: '',\r\n  filterValue: '',\r\n  searchPopupName: '',\r\n  setFilterDataAction: undefined,\r\n  setSearchPopupAction: undefined,\r\n  isHidden: false,\r\n  isSticky: false,\r\n  style: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// Components\r\nimport { HeaderDataCell } from 'components/HeaderDataCell/HeaderDataCell';\r\n\r\n// Constants\r\nimport { MAP } from 'config/default';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  sticky: {\r\n    position: 'sticky',\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: '11',\r\n  },\r\n  headerTable: {\r\n    flexShrink: '0',\r\n    flexWrap: 'nowrap',\r\n    // top: '95px',\r\n    height: theme.spacing(5),\r\n    width: 'fit-content',\r\n    backgroundColor: '#ffffff',\r\n  },\r\n}));\r\n\r\nexport const HeaderDataGrid = ({\r\n  appState,\r\n  sortState,\r\n  filterState,\r\n  setSortParamsAction,\r\n  setSearchPopupAction,\r\n  setFilterDataAction,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container item className={clsx(classes.headerTable, classes.sticky)}>\r\n      {Object.keys(MAP).map(key => (\r\n        <HeaderDataCell\r\n          key={key}\r\n          title={MAP[key].title}\r\n          fieldName={MAP[key].name}\r\n          sortState={\r\n            sortState.directions[sortState.sortKeys.indexOf(MAP[key].name)]\r\n          }\r\n          sortOrder={sortState.sortKeys.indexOf(MAP[key].name)}\r\n          isSortable={MAP[key].isSortable}\r\n          isSearchable={MAP[key].isSearchable}\r\n          setSortParamsAction={setSortParamsAction}\r\n          filterKey={filterState.filterKey}\r\n          filterValue={filterState.filterValue}\r\n          searchPopupName={filterState.searchPopupName}\r\n          setSearchPopupAction={setSearchPopupAction}\r\n          setFilterDataAction={setFilterDataAction}\r\n          isHidden={appState.hiddenColumns[MAP[key].name]}\r\n          isSticky={MAP[key].sticky}\r\n          style={{ width: MAP[key].columnWidth, left: MAP[key].leftPosition }}\r\n        />\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nHeaderDataGrid.propTypes = {\r\n  appState: PropTypes.shape({\r\n    hiddenColumns: PropTypes.objectOf(PropTypes.bool),\r\n  }).isRequired,\r\n  sortState: PropTypes.shape({\r\n    sortKeys: PropTypes.arrayOf(PropTypes.string),\r\n    directions: PropTypes.arrayOf(PropTypes.string),\r\n  }).isRequired,\r\n  filterState: PropTypes.shape({\r\n    filterKey: PropTypes.string,\r\n    filterValue: PropTypes.string,\r\n    searchPopupName: PropTypes.string,\r\n  }).isRequired,\r\n  setSortParamsAction: PropTypes.func.isRequired,\r\n  setSearchPopupAction: PropTypes.func.isRequired,\r\n  setFilterDataAction: PropTypes.func.isRequired,\r\n};\r\n","import { connect } from 'react-redux';\r\n\r\n// Actions\r\nimport { setSortParams } from 'actions/sortActions';\r\nimport { setFilterData, setSearchPopup } from 'actions/filterActions';\r\n\r\n// Components\r\nimport { HeaderDataGrid } from 'components/HeaderDataGrid/HeaderDataGrid';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    appState: state.appState,\r\n    sortState: state.sortState,\r\n    filterState: state.filterState,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setSortParamsAction: (sortKey, shiftFlag) =>\r\n      dispatch(setSortParams(sortKey, shiftFlag)),\r\n    setSearchPopupAction: searchPopupName =>\r\n      dispatch(setSearchPopup(searchPopupName)),\r\n    setFilterDataAction: (filterKey, filterValue) =>\r\n      dispatch(setFilterData(filterKey, filterValue)),\r\n  };\r\n};\r\n\r\nexport const HeaderDataGridContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HeaderDataGrid);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  avatarBlock: {\r\n    padding: '5px',\r\n  },\r\n  smallImage: {\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4),\r\n  },\r\n  sticky: {\r\n    backgroundColor: '#ffffff',\r\n  },\r\n}));\r\n\r\nexport const DataCellAvatar = ({ imageUrl, className, style }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid\r\n      container\r\n      alignItems=\"center\"\r\n      className={clsx(\r\n        classes.avatarBlock,\r\n        className,\r\n        className === 'sticky' && classes.sticky\r\n      )}\r\n      style={style}\r\n    >\r\n      <Avatar\r\n        className={classes.smallImage}\r\n        alt=\"avatar image\"\r\n        src={imageUrl}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nDataCellAvatar.propTypes = {\r\n  imageUrl: PropTypes.string,\r\n  className: PropTypes.string,\r\n  style: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n};\r\n\r\nDataCellAvatar.defaultProps = {\r\n  imageUrl: '',\r\n  className: '',\r\n  style: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  textBlock: {\r\n    padding: '5px',\r\n  },\r\n  numberCell: {\r\n    justifyContent: 'flex-end',\r\n    color: '#319781',\r\n    // fontWeight: 700,\r\n  },\r\n  cellText: {\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  sticky: {\r\n    backgroundColor: '#ffffff',\r\n    borderRight: '1px solid #bfbfbf',\r\n  },\r\n});\r\n\r\nexport const DataCellText = ({\r\n  dataContent,\r\n  isNumber,\r\n  isHidden,\r\n  className,\r\n  style,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  if (isHidden) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      alignItems=\"center\"\r\n      className={clsx(\r\n        classes.textBlock,\r\n        className,\r\n        className === 'sticky' && classes.sticky,\r\n        isNumber && classes.numberCell\r\n      )}\r\n      style={style}\r\n    >\r\n      <Typography variant=\"body1\" className={classes.cellText}>\r\n        {dataContent}\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nDataCellText.propTypes = {\r\n  dataContent: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  isNumber: PropTypes.bool,\r\n  isHidden: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  style: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n};\r\n\r\nDataCellText.defaultProps = {\r\n  dataContent: '',\r\n  isNumber: false,\r\n  isHidden: false,\r\n  className: '',\r\n  style: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles({\r\n  flagBlock: {\r\n    padding: '5px',\r\n  },\r\n  flagState: {\r\n    width: '15px',\r\n    height: '15px',\r\n    borderRadius: '50%',\r\n    backgroundColor: '#d4a19f',\r\n  },\r\n  active: {\r\n    backgroundColor: '#377ce4',\r\n  },\r\n});\r\n\r\nexport const DataCellBool = ({ flagState, style }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className={classes.flagBlock}\r\n      style={style}\r\n    >\r\n      <Box\r\n        component=\"div\"\r\n        className={`${classes.flagState} ${flagState ? classes.active : ''}`}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nDataCellBool.propTypes = {\r\n  flagState: PropTypes.bool,\r\n  style: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n};\r\n\r\nDataCellBool.defaultProps = {\r\n  flagState: false,\r\n  style: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles({\r\n  objectBlock: {\r\n    padding: '5px',\r\n    color: '#5050e6',\r\n  },\r\n  spanItem: {\r\n    margin: '0 2px',\r\n  },\r\n});\r\n\r\nexport const DataCellObject = ({ data, style }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"flex-end\"\r\n      alignItems=\"center\"\r\n      className={classes.objectBlock}\r\n      style={style}\r\n    >\r\n      {Object.keys(data).map(key => (\r\n        <Box component=\"span\" key={key} className={classes.spanItem}>\r\n          {data[key]}\r\n        </Box>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nDataCellObject.propTypes = {\r\n  data: PropTypes.shape({\r\n    currencySymbol: PropTypes.string,\r\n    amount: PropTypes.number,\r\n  }),\r\n  style: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n};\r\n\r\nDataCellObject.defaultProps = {\r\n  data: {},\r\n  style: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  selectBlock: {\r\n    padding: '5px',\r\n    position: 'relative',\r\n  },\r\n  sticky: {\r\n    backgroundColor: theme.palette.common.white,\r\n  },\r\n  indexText: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    fontSize: '0.65rem',\r\n    color: theme.palette.primary.light,\r\n  },\r\n}));\r\n\r\nexport const DataCellSelect = ({\r\n  index,\r\n  selectState,\r\n  id,\r\n  className,\r\n  style,\r\n  setSelectionAction,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const handleChange = () => {\r\n    setSelectionAction(id);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      className={clsx(\r\n        classes.selectBlock,\r\n        className,\r\n        className === 'sticky' && classes.sticky\r\n      )}\r\n      style={style}\r\n    >\r\n      {index !== undefined && (\r\n        <Box component=\"span\" className={classes.indexText}>\r\n          index: {index}\r\n        </Box>\r\n      )}\r\n      <Checkbox\r\n        checked={selectState}\r\n        onChange={handleChange}\r\n        inputProps={{ 'aria-label': 'selected checkbox' }}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nDataCellSelect.propTypes = {\r\n  index: PropTypes.number,\r\n  selectState: PropTypes.bool,\r\n  id: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  setSelectionAction: PropTypes.func,\r\n  style: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n};\r\n\r\nDataCellSelect.defaultProps = {\r\n  index: undefined,\r\n  selectState: false,\r\n  className: '',\r\n  setSelectionAction: undefined,\r\n  style: '',\r\n};\r\n","/* eslint-disable no-plusplus */\r\nimport React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// Components\r\nimport { DataCellAvatar } from 'components/DataCellAvatar/DataCellAvatar';\r\nimport { DataCellText } from 'components/DataCellText/DataCellText';\r\nimport { DataCellBool } from 'components/DataCellBool/DataCellBool';\r\nimport { DataCellObject } from 'components/DataCellObject/DataCellObject';\r\nimport { DataCellSelect } from 'components/DataCellSelect/DataCellSelect';\r\n\r\n// Constants\r\nimport { MAP, DATA_TYPES } from 'config/default';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  rowItem: {\r\n    flexShrink: '0',\r\n    flexWrap: 'nowrap',\r\n    position: 'relative',\r\n    height: theme.spacing(6),\r\n    // width: '950px',\r\n    width: 'fit-content',\r\n    backgroundColor: theme.palette.common.white,\r\n    borderTop: '1px solid #efefef',\r\n    '&:hover': {\r\n      backgroundColor: theme.color.grayed,\r\n    },\r\n  },\r\n  selectedItem: {\r\n    backgroundColor: theme.color.grayed,\r\n  },\r\n  renderText: {\r\n    position: 'absolute',\r\n    bottom: '0',\r\n    left: 0,\r\n    fontSize: '0.65rem',\r\n    color: theme.palette.secondary.light,\r\n    zIndex: 10,\r\n  },\r\n}));\r\n\r\nexport const ContentDataRow = React.memo(\r\n  ({ index, item, style, isSelected, hiddenColumns, setSelectionAction }) => {\r\n    const classes = useStyles();\r\n    const renders = useRef(0);\r\n\r\n    const renderCell = key => {\r\n      const fieldName = MAP[key].name;\r\n      const { columnWidth } = MAP[key];\r\n\r\n      switch (MAP[key].dataType) {\r\n        case DATA_TYPES.HIDDEN_TYPE:\r\n          return (\r\n            <DataCellSelect\r\n              key={`${key}-${fieldName}`}\r\n              index={index}\r\n              className=\"sticky\"\r\n              selectState={isSelected}\r\n              id={item.id}\r\n              style={{ width: columnWidth, left: MAP[key].leftPosition }}\r\n              setSelectionAction={setSelectionAction}\r\n            />\r\n          );\r\n\r\n        case DATA_TYPES.AVATAR_TYPE:\r\n          return (\r\n            <DataCellAvatar\r\n              key={`${key}-${fieldName}`}\r\n              className=\"sticky\"\r\n              imageUrl={item[fieldName]}\r\n              style={{\r\n                width: columnWidth,\r\n                left: MAP[key].leftPosition,\r\n              }}\r\n            />\r\n          );\r\n\r\n        case DATA_TYPES.TEXT_TYPE:\r\n          return (\r\n            <DataCellText\r\n              key={`${key}-${fieldName}`}\r\n              className={fieldName === 'name' ? 'sticky' : ''}\r\n              dataContent={item[fieldName]}\r\n              style={{\r\n                width: columnWidth,\r\n                left: fieldName === 'name' ? MAP[key].leftPosition : 'auto',\r\n              }}\r\n              isHidden={hiddenColumns[fieldName]}\r\n            />\r\n          );\r\n\r\n        case DATA_TYPES.NUMBER_TYPE:\r\n          return (\r\n            <DataCellText\r\n              key={`${key}-${fieldName}`}\r\n              dataContent={item[fieldName]}\r\n              isNumber\r\n              style={{ width: columnWidth }}\r\n              isHidden={hiddenColumns[fieldName]}\r\n            />\r\n          );\r\n\r\n        case DATA_TYPES.DATE_TYPE:\r\n          return (\r\n            <DataCellText\r\n              key={`${key}-${fieldName}`}\r\n              dataContent={new Date(item[fieldName]).toLocaleDateString()}\r\n              style={{ width: columnWidth }}\r\n              isHidden={hiddenColumns[fieldName]}\r\n            />\r\n          );\r\n\r\n        case DATA_TYPES.BOOL_TYPE:\r\n          return (\r\n            <DataCellBool\r\n              key={`${key}-${fieldName}`}\r\n              flagState={item[fieldName]}\r\n              style={{ width: columnWidth }}\r\n            />\r\n          );\r\n\r\n        case DATA_TYPES.OBJECT_TYPE:\r\n          return (\r\n            <DataCellObject\r\n              key={`${key}-${fieldName}`}\r\n              data={item[fieldName]}\r\n              style={{ width: columnWidth }}\r\n            />\r\n          );\r\n\r\n        default:\r\n          return (\r\n            <DataCellText key={`${key}-${fieldName}`} dataContent=\"some item\" />\r\n          );\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Grid\r\n        container\r\n        item\r\n        className={clsx(\r\n          classes.rowItem,\r\n          'row-item',\r\n          isSelected && ['selected-item', classes.selectedItem]\r\n        )}\r\n        style={style}\r\n      >\r\n        <div className={classes.renderText}>renders: {renders.current++}</div>\r\n        {Object.keys(MAP).map(key => renderCell(key))}\r\n      </Grid>\r\n    );\r\n  },\r\n  (prevProps, nextProps) => {\r\n    if (\r\n      prevProps.isSelected !== nextProps.isSelected ||\r\n      prevProps.hiddenColumns !== nextProps.hiddenColumns ||\r\n      prevProps.style.top !== nextProps.style.top\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n);\r\n\r\nContentDataRow.propTypes = {\r\n  index: PropTypes.number,\r\n  item: PropTypes.shape({\r\n    id: PropTypes.string,\r\n  }),\r\n  isSelected: PropTypes.bool,\r\n  hiddenColumns: PropTypes.objectOf(PropTypes.bool),\r\n  setSelectionAction: PropTypes.func,\r\n  style: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n};\r\n\r\nContentDataRow.defaultProps = {\r\n  index: undefined,\r\n  item: {},\r\n  isSelected: false,\r\n  hiddenColumns: {},\r\n  setSelectionAction: undefined,\r\n  style: {},\r\n};\r\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const VirtualizedList = ({\r\n  dataLength,\r\n  rowHeight,\r\n  headerHeight,\r\n  stickyHeader,\r\n  className,\r\n  renderItem,\r\n  boundaryItems,\r\n}) => {\r\n  const containerHeight = dataLength * rowHeight + headerHeight;\r\n  const [scrollPosition, setScrollPosition] = useState(0);\r\n  const [itemsToRender, setItemsToRender] = useState(\r\n    Math.floor(window.innerHeight / rowHeight)\r\n  );\r\n\r\n  const viewportRef = useRef(null);\r\n\r\n  const scrollHandler = useCallback(() => {\r\n    const { scrollTop } = viewportRef.current;\r\n    const itemsLimitToScroll = 3;\r\n    const deltaScroll =\r\n      scrollPosition < scrollTop\r\n        ? scrollTop - scrollPosition\r\n        : scrollPosition - scrollTop;\r\n    if (deltaScroll > rowHeight * itemsLimitToScroll) {\r\n      setScrollPosition(scrollTop);\r\n    }\r\n  }, [rowHeight, scrollPosition]);\r\n\r\n  useEffect(() => {\r\n    const windowResizeHandler = () => {\r\n      const { clientHeight } = viewportRef.current;\r\n      const newItemsToRender = Math.floor(clientHeight / rowHeight);\r\n      if (itemsToRender !== newItemsToRender) {\r\n        setItemsToRender(newItemsToRender);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', scrollHandler);\r\n    window.addEventListener('resize', windowResizeHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', scrollHandler);\r\n      window.removeEventListener('resize', windowResizeHandler);\r\n    };\r\n  }, [itemsToRender, rowHeight, scrollHandler, stickyHeader]);\r\n\r\n  const startIndexToRender = Math.floor(\r\n    scrollPosition / rowHeight - boundaryItems\r\n  );\r\n  const endIndexToRender =\r\n    startIndexToRender + itemsToRender + 2 * boundaryItems;\r\n\r\n  return (\r\n    <div\r\n      ref={viewportRef}\r\n      style={{\r\n        width: '100%',\r\n        // height: '600px',\r\n        overflow: 'auto',\r\n        height: '100%',\r\n      }}\r\n      className={className}\r\n      onScroll={scrollHandler}\r\n    >\r\n      <div\r\n        style={{\r\n          // backgroundColor: '#e0ddc0',\r\n          height: containerHeight,\r\n          position: 'relative',\r\n          // overflow: 'auto',\r\n          width: '100%',\r\n          // height: '100%',\r\n        }}\r\n      >\r\n        {stickyHeader}\r\n        {Array(dataLength)\r\n          .fill(0)\r\n          .map((item, index) => {\r\n            if (index >= startIndexToRender && index <= endIndexToRender) {\r\n              return renderItem(index, {\r\n                position: 'absolute',\r\n                top: index * rowHeight + headerHeight,\r\n              });\r\n            }\r\n\r\n            return null;\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nVirtualizedList.propTypes = {\r\n  dataLength: PropTypes.number,\r\n  rowHeight: PropTypes.number,\r\n  headerHeight: PropTypes.number,\r\n  stickyHeader: PropTypes.element,\r\n  className: PropTypes.string,\r\n  renderItem: PropTypes.func.isRequired,\r\n  boundaryItems: PropTypes.number,\r\n};\r\n\r\nVirtualizedList.defaultProps = {\r\n  dataLength: 0,\r\n  rowHeight: 0,\r\n  headerHeight: 0,\r\n  stickyHeader: undefined,\r\n  className: '',\r\n  boundaryItems: 3, // Default value\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(defaultTheme => ({\r\n  contentDataGrid: {\r\n    display: 'grid',\r\n    gridTemplateRows: 'auto 1fr',\r\n    alignItems: 'flex-start',\r\n    alignContent: 'flex-start',\r\n    // overflow: 'auto',\r\n    // padding: '5px',\r\n    height: '100%',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    // backgroundColor: '#ffffff',\r\n    // backgroundColor: 'teal',\r\n  },\r\n  tableWrapper: {\r\n    width: '100%',\r\n    // height: '600px',\r\n    overflow: 'auto',\r\n    height: '100%',\r\n  },\r\n  styledScrollBar: {\r\n    // * Scrollbars with styles\r\n    // The emerging W3C standard that is currently Firefox-only\r\n    scrollbarWidth: 'thin',\r\n    scrollbarColor: `${defaultTheme.palette.primary.light} ${defaultTheme.color.grayed}`,\r\n\r\n    /* Works on Chrome/Edge/Safari */\r\n    '&::-webkit-scrollbar': {\r\n      width: '10px',\r\n      height: '10px',\r\n    },\r\n    '&::-webkit-scrollbar-track': {\r\n      backgroundColor: defaultTheme.color.grayed,\r\n    },\r\n    '&::-webkit-scrollbar-thumb': {\r\n      borderRadius: '10px',\r\n      backgroundColor: defaultTheme.palette.primary.light,\r\n      border: `3px solid ${defaultTheme.color.grayed}`,\r\n    },\r\n  },\r\n  backDropRoot: {\r\n    zIndex: '100',\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// Containers\r\nimport { SettingsContainer } from 'containers/SettingsContainer';\r\nimport { HeaderDataGridContainer } from 'containers/HeaderDataGridContainer';\r\n\r\n// Components\r\nimport { ContentDataRow } from 'components/ContentDataRow/ContentDataRow';\r\nimport { VirtualizedList } from 'components/VirtualizedList/VirtualizedList';\r\n\r\n// Themes\r\nimport { theme } from 'config/theme';\r\n\r\n// Constants\r\nimport { DEFAULT_CONFIG } from 'config/default';\r\n\r\n// Styles\r\nimport { useStyles } from './ContentDataGridStyles';\r\n\r\nexport const ContentDataGrid = ({\r\n  data,\r\n  appState,\r\n  dataState,\r\n  sortState,\r\n  filterState,\r\n  isPending,\r\n  error,\r\n  setSelectionAction,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const renderTable = () => {\r\n    if (!appState.virtualizationState) {\r\n      return (\r\n        <div className={clsx(classes.tableWrapper, classes.styledScrollBar)}>\r\n          <HeaderDataGridContainer />\r\n          {data.map((item, index) => (\r\n            <ContentDataRow\r\n              key={item.id}\r\n              index={index}\r\n              item={item}\r\n              isSelected={dataState.selectedItems.includes(item.id)}\r\n              hiddenColumns={appState.hiddenColumns}\r\n              setSelectionAction={setSelectionAction}\r\n            />\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <VirtualizedList\r\n        dataLength={data.length}\r\n        rowHeight={theme.spacing(6)}\r\n        headerHeight={DEFAULT_CONFIG.FIXED_ROW_HEIGHT}\r\n        stickyHeader={<HeaderDataGridContainer />}\r\n        className={classes.styledScrollBar}\r\n        renderItem={(index, style) => (\r\n          <ContentDataRow\r\n            key={data[index].id}\r\n            index={index}\r\n            item={data[index]}\r\n            style={style}\r\n            isSelected={dataState.selectedItems.includes(data[index].id)}\r\n            hiddenColumns={appState.hiddenColumns}\r\n            setSelectionAction={setSelectionAction}\r\n          />\r\n        )}\r\n      />\r\n    );\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <Grid container>\r\n        <Typography variant=\"body1\">\r\n          Error: {error.message} (Please, update page)\r\n        </Typography>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  if (isPending) {\r\n    return (\r\n      <Backdrop open={isPending} className={classes.backDropRoot}>\r\n        <CircularProgress />\r\n      </Backdrop>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Grid container item className={classes.contentDataGrid}>\r\n      <SettingsContainer />\r\n\r\n      {renderTable()}\r\n\r\n      <Backdrop\r\n        open={sortState.isSortPending || filterState.isFiltering}\r\n        className={classes.backDropRoot}\r\n      >\r\n        <CircularProgress />\r\n      </Backdrop>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nContentDataGrid.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.object),\r\n  appState: PropTypes.shape({\r\n    virtualizationState: PropTypes.bool,\r\n    hiddenColumns: PropTypes.objectOf(PropTypes.bool),\r\n  }).isRequired,\r\n  dataState: PropTypes.shape({\r\n    selectedItems: PropTypes.arrayOf(PropTypes.string),\r\n  }).isRequired,\r\n  sortState: PropTypes.shape({\r\n    sortFields: PropTypes.arrayOf(PropTypes.string),\r\n    sortDirections: PropTypes.arrayOf(PropTypes.string),\r\n    isSortPending: PropTypes.bool,\r\n  }).isRequired,\r\n  filterState: PropTypes.shape({\r\n    filterKey: PropTypes.string,\r\n    filterValue: PropTypes.string,\r\n    filterGlobalValue: PropTypes.string,\r\n    filterToggleState: PropTypes.number,\r\n    filterEnums: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    isFiltering: PropTypes.bool,\r\n\r\n    searchPopupName: PropTypes.string,\r\n  }).isRequired,\r\n  isPending: PropTypes.bool,\r\n  error: PropTypes.shape({\r\n    message: PropTypes.string,\r\n  }),\r\n  setSelectionAction: PropTypes.func,\r\n};\r\n\r\nContentDataGrid.defaultProps = {\r\n  data: [],\r\n  isPending: false,\r\n  error: undefined,\r\n  setSelectionAction: undefined,\r\n};\r\n","import { connect } from 'react-redux';\r\n\r\n// Actions\r\nimport { setSelection } from 'actions/dataActions';\r\n\r\n// Selectors\r\nimport { processDataSelector } from 'selectors/processDataSelector';\r\n\r\n// Reducers\r\nimport { getDataPending, getData, getDataError } from 'reducers/dataReducer';\r\n\r\n// Components\r\nimport { ContentDataGrid } from 'components/ContentDataGrid/ContentDataGrid';\r\n\r\nconst mapStoreToProps = state => {\r\n  return {\r\n    data: processDataSelector(state),\r\n    appState: state.appState,\r\n    dataState: state.dataState,\r\n    sortState: state.sortState,\r\n    filterState: state.filterState,\r\n    isPending: getDataPending(state.dataState),\r\n    fetchedData: getData(state.dataState),\r\n    error: getDataError(state.dataState),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setSelectionAction: selectedItem => dispatch(setSelection(selectedItem)),\r\n  };\r\n};\r\n\r\nexport const ContentDataGridContainer = connect(\r\n  mapStoreToProps,\r\n  mapDispatchToProps\r\n)(ContentDataGrid);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// Containers\r\nimport { ContentDataGridContainer } from 'containers/ContentDataGridContainer';\r\n\r\nconst useStyles = makeStyles({\r\n  reactDataGrid: {\r\n    backgroundColor: '#ffffff',\r\n    height: '100%',\r\n  },\r\n});\r\n\r\nexport const ReactDataGrid = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container item direction=\"column\" className={classes.reactDataGrid}>\r\n      <ContentDataGridContainer />\r\n    </Grid>\r\n  );\r\n};\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nexport const themeDark = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: grey[100],\r\n    },\r\n    secondary: {\r\n      main: grey[800],\r\n    },\r\n    extra: 'red',\r\n    type: 'dark',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n// Containers\r\nimport { FiltersContainer } from 'containers/FiltersContainer';\r\n\r\n// Components\r\nimport { ReactDataGrid } from 'components/ReactDataGrid/ReactDataGrid';\r\n\r\n// Themes\r\nimport { themeDark } from 'config/themeDark';\r\n\r\nconst useStyles = makeStyles(defaultTheme => ({\r\n  appRoot: {\r\n    height: '100vh',\r\n    padding: '20px',\r\n    boxSizing: 'border-box',\r\n    backgroundColor: '#3f51b508',\r\n    boxShadow: defaultTheme.shadows[20],\r\n  },\r\n  appWrapper: {\r\n    height: '100%',\r\n    width: '100%',\r\n    overflow: 'hidden',\r\n  },\r\n  filtersContainer: {\r\n    padding: '20px 15px',\r\n    backgroundColor: themeDark.palette.secondary.main,\r\n    color: themeDark.palette.primary.main,\r\n  },\r\n  tableContainer: {\r\n    backgroundColor: defaultTheme.color.grayed,\r\n    padding: '25px 35px',\r\n    height: '100%',\r\n  },\r\n  height100Percent: {\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nexport const App = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.appRoot}>\r\n      <Paper elevation={5} className={classes.appWrapper}>\r\n        <Grid container className={classes.height100Percent}>\r\n          <ThemeProvider theme={themeDark}>\r\n            <Grid\r\n              container\r\n              item\r\n              direction=\"column\"\r\n              xs={12}\r\n              sm={3}\r\n              md={2}\r\n              className={classes.filtersContainer}\r\n            >\r\n              <FiltersContainer />\r\n            </Grid>\r\n          </ThemeProvider>\r\n          <Grid\r\n            container\r\n            item\r\n            xs={12}\r\n            sm={9}\r\n            md={10}\r\n            className={classes.tableContainer}\r\n          >\r\n            <ReactDataGrid />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\n// Store\r\nimport { store } from 'store/configureStore';\r\n\r\n// Actions\r\nimport { fetchData } from 'actions/dataActions';\r\n\r\n// Theme\r\nimport { theme } from 'config/theme';\r\n\r\n// Modules\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// Components\r\nimport { App } from './App';\r\n\r\n// Styles\r\nimport './index.scss';\r\n\r\n// Initial fetch\r\nstore.dispatch(fetchData());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}